// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fluffy-bunny/sarulabsdi/internal/contracts/something (interfaces: ISomething)

// Package something is a generated GoMock package.
package something

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISomething is a mock of ISomething interface.
type MockISomething struct {
	ctrl     *gomock.Controller
	recorder *MockISomethingMockRecorder
}

// MockISomethingMockRecorder is the mock recorder for MockISomething.
type MockISomethingMockRecorder struct {
	mock *MockISomething
}

// NewMockISomething creates a new mock instance.
func NewMockISomething(ctrl *gomock.Controller) *MockISomething {
	mock := &MockISomething{ctrl: ctrl}
	mock.recorder = &MockISomethingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISomething) EXPECT() *MockISomethingMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockISomething) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockISomethingMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockISomething)(nil).GetName))
}
